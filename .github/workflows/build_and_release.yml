on:
  push:
    paths:
      - '**.py'
      - 'assets/**'
      - '.github/workflows/build_and_release.yml'
    branches:
      - master

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          pip install pyinstaller

      - name: Build Executable
        run: |
          ls -l ./compiling
          pyinstaller --noconfirm --onefile --console --icon "./compiling/favicon.ico" --add-data "./compiling/manifest.xml:." main.py

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(python -c 'from main import __version__; print(__version__)')"

      - name: Fetch and store download count
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs')
            const { owner, repo } = context.repo
            const releases = await github.repos.listReleases({ owner, repo })
            let totalDownloadCount = 0
            if (fs.existsSync('download_count.json')) {
              totalDownloadCount = JSON.parse(fs.readFileSync('download_count.json', 'utf8')).downloads
            }
            for (const release of releases.data) {
              for (const asset of release.assets) {
                  totalDownloadCount += asset.download_count
              }
            }
            fs.writeFileSync('download_count.json', JSON.stringify({ downloads: totalDownloadCount }))

      - name: Commit and push download count
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add download_count.json
          git commit -m "updated download count" -a
          git push

      - name: Zip Dist Folder
        run: |
          powershell -command "Compress-Archive -Path ./dist/* -DestinationPath AutoMonster.zip"

      - name: Delete old release
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo
            const releases = await github.repos.listReleases({ owner, repo })
            for (const release of releases.data) {
              await github.repos.deleteRelease({ owner, repo, release_id: release.id })
              await github.git.deleteRef({ owner, repo, ref: 'tags/' + release.tag_name })
            }

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v-${{ steps.get_version.outputs.version }}
          release_name: Latest v-${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./AutoMonster.zip
          asset_name: AutoMonster.zip
          asset_content_type: application/zip
